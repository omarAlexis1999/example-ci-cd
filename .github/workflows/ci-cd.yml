name: CI/CD

on:
  push:
    branches: [ "master"]
  pull_request:
    branches: [ "development" ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Select the environment to deploy to'
        required: true
        default: 'PROD'
        options:
        - 'STAGING'
        - 'PROD'


jobs:
  docker_build_staging:

    if: github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'STAGING')
    environment: STAGING
    name: Build and Publish Docker Image to Staging
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
          context: .
          build-args: |
            IMAGE=${{ vars.STAGING_IMAGE }}
            TAG=${{ vars.STAGING_TAG }}
            ENVIROMENT=${{ vars.STAGING_ENVIROMENT }}

          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.STAGING_REPO_NAME}}:latest-${{ vars.NAME_VERSION }}


  docker_build_prod:

    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'PROD'
    environment: PROD
    name: Build and Publish Docker Image to PROD
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3
    
    - name: Login to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build and push
      uses: docker/build-push-action@v4
      with:
          context: .
          build-args: |
            IMAGE=${{ vars.PROD_IMAGE }}
            TAG=${{ vars.PROD_TAG }}
            ENVIROMENT=${{ vars.PROD_ENVIROMENT }}

          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ vars.PROD_REPO_NAME}}:latest-${{ vars.NAME_VERSION }}